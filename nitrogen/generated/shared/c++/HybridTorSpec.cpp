///
/// HybridTorSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "HybridTorSpec.hpp"

namespace margelo::nitro::nitrotor {

  void HybridTorSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridMethod("initTorService", &HybridTorSpec::initTorService);
      prototype.registerHybridMethod("createHiddenService", &HybridTorSpec::createHiddenService);
      prototype.registerHybridMethod("startTorIfNotRunning", &HybridTorSpec::startTorIfNotRunning);
      prototype.registerHybridMethod("getServiceStatus", &HybridTorSpec::getServiceStatus);
      prototype.registerHybridMethod("deleteHiddenService", &HybridTorSpec::deleteHiddenService);
      prototype.registerHybridMethod("shutdownService", &HybridTorSpec::shutdownService);
    });
  }

} // namespace margelo::nitro::nitrotor
